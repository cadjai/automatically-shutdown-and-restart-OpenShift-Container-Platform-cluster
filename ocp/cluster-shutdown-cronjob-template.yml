apiVersion: template.openshift.io/v1
kind: Template
labels:
  cluster-shutdown: 1.0.0
  template: cluster-shutdown-cronjob
message: 'A new Cluster Shutdown cronjob has been created in your project.'
metadata:
  annotations:
    description: A cronjob to shutdown cluster nodes if needed. For more information about using this template, see https://github.com/cadjai/cluster-shutdown-on-ocp4.
    iconClass: icon-sso
    openshift.io/display-name: Cluster Shutdown cronjob
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: shutdown
    template.openshift.io/documentation-url: https://docs.openshift.com/container-platform/4.9/backup_and_restore/graceful-cluster-shutdown.html 
    template.openshift.io/long-description: This template defines resources needed to deploy the cronjob to use to shutdown cluster nodes.
    template.openshift.io/support-url: https://access.redhat.com
    version: cluster-shutdown-cronjob-v1.0.0
    labels:
  name: cluster-shutdown-cronjob 
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${SERVICE_ACCOUNT_NAME}
    namespace: ${APPLICATION_NAMESPACE}
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    name: ${APPLICATION_NAME}
    namespace: ${APPLICATION_NAMESPACE}
  spec:
    concurrencyPolicy: Allow
    failedJobsHistoryLimit: 1
    jobTemplate:
      metadata:
      spec:
        template:
          metadata:
          spec:
            containers:
            - args:
              - bash
              - -c
              - chroot /host shutdown -h 1 
              env:
              image: ${CLUSTER_SHUTDOWN_IMAGE_REGISTRY_REPO}/${CLUSTER_SHUTDOWN_IMAGE}
              imagePullPolicy: IfNotPresent
              name: ${APPLICATION_NAME}
              resources: {}
              securityContext:
                privileged: true
                runAsUser: 0
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
              - mountPath: /host
                name: host
            nodeSelector:
              node-role.kubernetes.io/master: ""
            restartPolicy: OnFailure
            enableServiceLinks: true
            hostNetwork: true
            hostPID: true
            schedulerName: default-scheduler
            securityContext: {}
            serviceAccount: ${SERVICE_ACCOUNT_NAME}
            serviceAccountName: ${SERVICE_ACCOUNT_NAME}
            terminationGracePeriodSeconds: 30
            tolerations:
            - operator: Exists
            volumes:
            - hostPath:
                path: /
                type: Directory
              name: host
    schedule: ${CLUSTER_SHUTDOWN_CRON_EXPRESSION} 
    successfulJobsHistoryLimit: 3
    suspend: false
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: false
  value: cluster-shutdown 
- description: Namespace in which the application is being deployed .
  displayName: ImageStream Namespace
  name: APPLICATION_NAMESPACE
  required: true
- description: The name of the service account to use to deploy the cronjob. Note that this will have permissions to run privileged pods.
  displayName: Service Account Name
  name: SERVICE_ACCOUNT_NAME
  value: cluster-shutdown-sa
- description: The Red Hat Os tool Image to use to perform the backup..
  displayName: Shutdown Image Tool
  name: CLUSTER_SHUTDOWN_IMAGE
  value: ose-tools-rhel8 
- description: The Registry where the image is pulled from.
  displayName: Shutdown Image Tool Registry and Repository
  name: CLUSTER_SHUTDOWN_IMAGE_REGISTRY_REPO
  value: registry.redhat.io/openshift4 
- description: The Cron expression to use to run the cron job. if not set default to daily.
  displayName: Cron Expression
  name: CLUSTER_SHUTDOWN_CRON_EXPRESSION
  value: 01 23 * * *

